// Utility to remove empty fields from an object
export function removeEmptyFields<T extends Record<string, any>>(obj: T): Partial<T> {
  return Object.fromEntries(
    Object.entries(obj).filter(([_, value]) => {
      if (Array.isArray(value)) {
        return value.length > 0;
      }
      if (value === null || value === undefined || value === '') {
        return false;
      }
      return true;
    })
  ) as Partial<T>;
}

// Transform member data to match Supabase schema
export function transformMemberForSupabase(memberData: any) {
  const cleanedData = removeEmptyFields({
    full_name: memberData.fullName || memberData.name,
    address: memberData.address,
    email: memberData.email,
    gender: memberData.gender,
    marital_status: memberData.maritalStatus,
    phone: memberData.mobileNo,
    date_of_birth: memberData.dateOfBirth || null,
    postcode: memberData.postCode,
    town: memberData.town,
    verified: memberData.verified || false,
    status: 'active',
    member_number: '', // Will be generated by trigger
  });

  console.log('Transformed member data:', cleanedData);
  return cleanedData;
}

// Transform collector data to match Supabase schema
export function transformCollectorForSupabase(collectorName: string) {
  const nameParts = collectorName.split(/[\s&-]/);
  const prefix = nameParts
    .map(part => part.substring(0, 2).toUpperCase())
    .join('');

  return {
    name: collectorName,
    prefix,
    active: true,
  };
}